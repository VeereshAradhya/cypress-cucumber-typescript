{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-30T13:06:58.635Z",
    "end": "2020-07-30T13:07:17.787Z",
    "duration": 19152,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "45f7808c-ea48-40f8-a015-972d92365f3b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fe7dbb3-6b76-4ca4-94ee-0f729c866f7f",
          "title": "Helm Chart",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Perform Upgrade action on Helm Release through Context Menu: HR-08-TC02",
              "fullTitle": "Helm Chart Perform Upgrade action on Helm Release through Context Menu: HR-08-TC02",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cca5401a-065b-44f2-ab0c-05947f58d2e5",
              "parentUUID": "1fe7dbb3-6b76-4ca4-94ee-0f729c866f7f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Perform Rollback action on Helm Release through Context Menu: HR-08-TC03",
              "fullTitle": "Helm Chart Perform Rollback action on Helm Release through Context Menu: HR-08-TC03",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "01d557b7-f491-482f-8374-27b27dc15d9a",
              "parentUUID": "1fe7dbb3-6b76-4ca4-94ee-0f729c866f7f",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Uninstall Helm Release through Context Menu: HR-08-TC04",
              "fullTitle": "Helm Chart Uninstall Helm Release through Context Menu: HR-08-TC04",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5f60b0c1-3444-41ab-bd3e-485e9157ad42",
              "parentUUID": "1fe7dbb3-6b76-4ca4-94ee-0f729c866f7f",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "cca5401a-065b-44f2-ab0c-05947f58d2e5",
            "01d557b7-f491-482f-8374-27b27dc15d9a",
            "5f60b0c1-3444-41ab-bd3e-485e9157ad42"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true
      },
      "version": "4.0.1"
    }
  }
}